## Scenario settings
Scenario.name = GameSwordfishRun
Scenario.simulateConnections = true
Scenario.updateInterval = 1
# 43200s == 12h
Scenario.endTime = 1000

# Define 6 different node groups
Scenario.nrofHostGroups = 1

# Common settings for all groups
Group.movementModel = MapBasedMovement

## Utilizacao do novo algoritmo de roteamento
## Group.router = EpidemicRouter

#############################
######## SWORDFISH ##########
#############################
Group.router = Swordfish

## RoteamentoAmigos.grafo = mobilidade/grafo.txt

Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = highspeedInterface
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

Group.nrofHosts = 9

# group1 (cars) specific settings
Group1.groupID = carro
Group1.okMaps = 1
# cars can drive only on roads
Group1.okMaps = 1
# 10-50 km/h (em m/s)
Group1.speed = 2.7, 13.9


## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 25,35
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,3
# Message ID prefix
Events1.prefix = Message

# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = [2; 8372; 98092; 18293; 777]
#MovementModel.rngSeed = [2; 8372]
#MovementModel.rngSeed = 8372

# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 10000, 8000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 43000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 2
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
